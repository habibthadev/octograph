name: Deploy to Vercel

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-docs:
    name: Deploy Docs
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm --filter octograph build

      - name: Build docs
        run: pnpm --filter octograph-docs build

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy Docs to Vercel
        working-directory: apps/docs
        run: |
          # Link or create project
          vercel link --yes --project octograph-docs --token ${{ secrets.VERCEL_TOKEN }} || \
          vercel --token ${{ secrets.VERCEL_TOKEN }} --yes

          # Deploy to production
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

  deploy-example:
    name: Deploy Example
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm --filter octograph build

      - name: Build example
        run: pnpm --filter octograph-example build

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy Example to Vercel
        working-directory: apps/example
        run: |
          # Link or create project
          vercel link --yes --project octograph-example --token ${{ secrets.VERCEL_TOKEN }} || \
          vercel --token ${{ secrets.VERCEL_TOKEN }} --yes

          # Deploy to production
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
